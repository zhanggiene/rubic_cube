/* 
  vertexShader.strings
  second

  Created by Zhang Zhuyan on 16/6/19.
  Copyright Â© 2019 Zhang Zhuyan. All rights reserved.
*/

#version 330 core
layout (location = 0) in vec3 aPos;
layout (location=1) in vec3 aNormal;
out vec3 Normal;
out vec3 FragPos;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
void main()
{

gl_Position = projection * view * model *vec4(aPos.x,aPos.y,aPos.z, 1.0);
FragPos = vec3(model * vec4(aPos, 1.0));// it is the world position of one point in object.
Normal=mat3(transpose(inverse(model)))*aNormal;// normal does not follow the same transformation as the rest. 

}
